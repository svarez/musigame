{"version":3,"sources":["api/Api.js","api/ApiUrlsProvider.js","api/ApiSelector.js","utils/getRandomElement.js","utils/getRangeOfYears.js","utils/QuizConstructor.js","utils/UserContext.js","components/Intro.js","utils/GetNextQuestion.js","components/ui/Percentages.js","components/Quiz.js","components/ui/Header.js","routers/AppRouter.js","QuizApp.js","index.js"],"names":["Api","url","a","fetch","catch","err","text","then","errorMessage","props","dispatch","console","log","resp","json","data","error","apiUrlsProvider","apiKey","process","baseUrlApi","methodArtistSearch","methodGetSimilarArtist","methodGetTopAlbums","methodGetInfoAlbum","limit","urlArtistSearch","artist","this","formatStringURL","urlGetSimilarArtist","urlGetTopAlbums","id","urlGetTopAlbumsByName","urlGetInfoAlbum","urlGetInfoAlbumByName","album","string","encodeURI","normalize","replace","toLowerCase","getSimilarArtist","getTopAlbums","getTopAlbumsByName","name","getInfoAlbum","getInfoAlbumByName","getRandomElements","arr","n","array","Array","len","length","taken","x","Math","floor","random","getRangeOfYears","actualYear","Date","getFullYear","minYear","min","fill","map","_","index","filter","y","String","QuizSelector","favArtist","results","artistmatches","quizConstructor","getQuestion","question","whatYear","whoRecorded","wichSong","wichAlbum","getRandomAlbums","selectedAlbum","mbid","albums","wiki","getReleaseYear","releaseYear","date","parseInt","toString","randomYears","titleQuestion","answers","sort","correctAnswer","Object","keys","find","key","quiz","title","artistName","simArtist","similarartists","randomArtists","art","tracks","track","songs","song","randomArtist","randomAlbum","randomA","am","randomSong","selectedAlbums","randomAlb","yearRegex","splitMatches","content","match","split","topalbums","formAlbum","includes","UserContext","createContext","Intro","useContext","setFavArtist","setSelectedArtist","history","useHistory","useState","setError","disabled","className","type","autoComplete","placeholder","required","value","onChange","e","target","htmlFor","onClick","preventDefault","artists","selectedArtist","reduce","acc","ele","listeners","GetNextQuestion","styleWidth","percent","width","Percentages","correctAnswers","totalAnswers","percentCorrect","round","percentWrong","style","Quiz","setCorrectAnswers","setTotalAnswers","radioRef","useRef","loading","setQuiz","useEffect","q","handleChange","current","classList","add","setTimeout","ref","el","Header","to","AppRouter","basename","exact","path","component","QuizApp","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee4a9708.chunk.js","sourcesContent":["export const Api = async(url) => {\r\n        \r\n    const resp = await fetch(url)\r\n    .catch( err => {\r\n        err.text().then( errorMessage => {\r\n        this.props.dispatch(console.log(errorMessage))\r\n        //ToDo displayTheError\r\n        })\r\n    })\r\n    const data = await resp.json()\r\n    .catch( err => {\r\n        err.text().then( errorMessage => {\r\n        this.props.dispatch(console.log(errorMessage))\r\n        //ToDo displayTheError\r\n        })\r\n    })\r\n    if(!data.error)\r\n    return data;\r\n\r\n}","export const apiUrlsProvider = {\r\n\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    baseUrlApi : 'https://ws.audioscrobbler.com/2.0/',\r\n    methodArtistSearch: 'artist.search',\r\n    methodGetSimilarArtist: 'artist.getsimilar',\r\n    methodGetTopAlbums : 'artist.gettopalbums',\r\n    methodGetInfoAlbum : 'album.getinfo',\r\n    limit: 10,\r\n    urlArtistSearch: function(artist) {\r\n        return `${this.baseUrlApi}?method=${this.methodArtistSearch}&api_key=${this.apiKey}&artist=${formatStringURL(artist)}&format=json`\r\n    },\r\n    urlGetSimilarArtist: function(artist) {\r\n\r\n        return `${this.baseUrlApi}?method=${this.methodGetSimilarArtist}&api_key=${this.apiKey}&artist=${formatStringURL(artist)}&limit=${this.limit}&format=json`\r\n    },\r\n    urlGetTopAlbums : function(id) {\r\n        return `${this.baseUrlApi}?method=${this.methodGetTopAlbums}&api_key=${this.apiKey}&mbid=${id}&limit=${this.limit}&format=json`\r\n    },\r\n    urlGetTopAlbumsByName : function(artist) {\r\n        return `${this.baseUrlApi}?method=${this.methodGetTopAlbums}&api_key=${this.apiKey}&artist=${formatStringURL(artist)}&limit=${this.limit}&format=json`\r\n    },\r\n    urlGetInfoAlbum : function(id) { \r\n        return `${this.baseUrlApi}?method=${this.methodGetInfoAlbum}&api_key=${this.apiKey}&mbid=${id}&format=json`\r\n    },\r\n    urlGetInfoAlbumByName : function(album,artist) { \r\n        return `${this.baseUrlApi}?method=${this.methodGetInfoAlbum}&api_key=${this.apiKey}&album=${formatStringURL(album)}&artist=${formatStringURL(artist)}&format=json`\r\n    }\r\n\r\n}\r\n\r\nconst formatStringURL = string => encodeURI(string.normalize('NFD').replace(/[\\u00C0-\\u00FF]/g, '').toLowerCase())","import { Api } from './Api'\r\nimport { apiUrlsProvider } from './ApiUrlsProvider'\r\n\r\nexport const searchByArtistName = (artist) => Api(apiUrlsProvider.urlArtistSearch(artist));\r\nexport const getSimilarArtist = (artist) => Api(apiUrlsProvider.urlGetSimilarArtist(artist));\r\nexport const getTopAlbums = (id) => Api(apiUrlsProvider.urlGetTopAlbums(id));\r\nexport const getTopAlbumsByName = (name) => Api(apiUrlsProvider.urlGetTopAlbumsByName(name));\r\nexport const getInfoAlbum = (id) => Api(apiUrlsProvider.urlGetInfoAlbum(id));\r\nexport const getInfoAlbumByName = (album, artist) => Api(apiUrlsProvider.urlGetInfoAlbumByName(album, artist));\r\n\r\n\r\n","export const getRandomElements = (arr = {}, n) => {\r\n\r\n    let array = new Array(n),\r\n        len = arr.length,\r\n        taken = new Array(len);\r\n    if (n > len)\r\n        return [];\r\n    while (n--) {\r\n        let x = Math.floor(Math.random() * len);\r\n        array[n] = arr[x in taken ? taken[x] : x];\r\n        taken[x] = --len in taken ? taken[len] : len;\r\n    }\r\n\r\n    return array;\r\n}","export const getRangeOfYears = (n) => {\r\n    const actualYear = new Date().getFullYear()\r\n\r\n    const maxYear = Math.min(n + 5, actualYear)\r\n    const minYear = maxYear - 10\r\n\r\n    return new Array(10).fill()\r\n        .map((_, index) => minYear + index)\r\n        .filter(y => y !== n) \r\n        .map(String)\r\n}\r\n/*export const getRangeOfYears = (n) => {\r\n    const randomYears = [],\r\n    actualYear = (new Date()).getFullYear(),\r\n    maxYear = (n + 5 < actualYear) ? n + 5 : actualYear,\r\n    minYear = (n + 5 < actualYear) ? n - 5 : actualYear - 10;\r\n\r\n    for (let i = minYear; i < maxYear; i++) {\r\n        (i!==n) && randomYears.push((i).toString());\r\n    }\r\n\r\n    return randomYears;\r\n\r\n}*/\r\n\r\n/*export const getRangeOfYears = (n) => {\r\n    const actualYear = new Date().getFullYear()\r\n\r\n    const maxYear = Math.min(n + 5, actualYear)\r\n    const minYear = maxYear - 10\r\n\r\n    return new Array(10).fill()\r\n        .map((_, index) => minYear + index)\r\n        .filter(y => y !== n) \r\n        .map(String)\r\n}\r\n\r\nconst shuffleArray = array => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n}\r\n\r\nconst pickRandom = (n, years) => {\r\n shuffleArray(years) \r\n  return new Array(n).fill().\r\n  map((_, index) => years[index])\r\n}\r\n\r\nconst addValidYear = (year, years) => {\r\n years.push(year.toString()) \r\n  return years\r\n}\r\n\r\nconst generateAnswers = (year) => {\r\n const result = addValidYear(year, pickRandom(3, getRangeOfYears(year)))\r\n  shuffleArray(result)\r\n  return result\r\n}\r\n\r\nconsole.log(generateAnswers(1989))*/","import { getInfoAlbum, getInfoAlbumByName, getSimilarArtist, getTopAlbums, getTopAlbumsByName, searchByArtistName } from \"../api/ApiSelector\"\r\nimport { getRandomElements } from \"./getRandomElement\";\r\nimport { getRangeOfYears } from \"./getRangeOfYears\";\r\n\r\nexport const QuizSelector = async (favArtist) => {\r\n\r\n    const { results } = await searchByArtistName(favArtist);\r\n\r\n    return results?.artistmatches?.artist;\r\n\r\n}\r\nexport const quizConstructor = (artist) => {\r\n\r\n    return getQuestion(artist).then(question=>question);\r\n\r\n}\r\nconst getQuestion = (artist) => {\r\n    \r\n\r\n    const randomNumber = Math.floor(Math.random() * 3);\r\n          \r\n    switch (randomNumber) {\r\n        case 0:\r\n            return whatYear(artist)\r\n\r\n        case 1:\r\n            return whoRecorded(artist)\r\n\r\n        case 2:\r\n            return wichSong(artist)\r\n\r\n        case 3:\r\n            return wichAlbum(artist)\r\n    \r\n        default:\r\n            return whatYear(artist)\r\n    }\r\n\r\n}\r\nconst whatYear = async (artist) => {\r\n\r\n    const selectedAlbum = await getRandomAlbums(artist)\r\n\r\n    const albums = selectedAlbum.mbid \r\n        ? await getInfoAlbum(selectedAlbum.mbid)\r\n        : await getInfoAlbumByName(selectedAlbum.name, selectedAlbum.artist.name)\r\n\r\n    if(albums?.album?.wiki && getReleaseYear(albums?.album?.wiki)) {\r\n\r\n        const {album : a} = albums\r\n        const releaseYear = getReleaseYear(a.wiki)\r\n\r\n        const date = parseInt(releaseYear).toString();\r\n        const randomYears = getRangeOfYears(parseInt(date));\r\n\r\n        const titleQuestion = `What year was release the album ${selectedAlbum.name} by ${selectedAlbum.artist.name}?`;\r\n        const answers = [...getRandomElements(randomYears, 3), date].sort(() => Math.random() - 0.5);\r\n        const correctAnswer = Object.keys(answers).find(key => answers[key] === date)\r\n        \r\n        const quiz = {\r\n            title: titleQuestion,\r\n            answers: answers,\r\n            correctAnswer: correctAnswer\r\n        }\r\n\r\n        return quiz\r\n\r\n    } else {\r\n\r\n        return wichSong(artist)\r\n\r\n    }\r\n\r\n\r\n}\r\nconst whoRecorded = async (artist) => {\r\n\r\n    const selectedAlbum = await getRandomAlbums(artist)\r\n    const artistName = selectedAlbum.artist.name\r\n    const {similarartists : { artist :simArtist }} = await getSimilarArtist(artistName)\r\n    const randomArtists = getRandomElements(simArtist, 3).map((art)=>art.name)\r\n    \r\n    const titleQuestion = `Who recorded the album ${selectedAlbum.name}?`;\r\n    const answers = [...getRandomElements(randomArtists, 3), artistName].sort(() => Math.random() - 0.5);\r\n    const correctAnswer = Object.keys(answers).find(key => answers[key] === artistName)\r\n    \r\n    const quiz = {\r\n        title: titleQuestion,\r\n        answers: answers,\r\n        correctAnswer: correctAnswer\r\n    }\r\n\r\n    return quiz\r\n\r\n    \r\n}\r\nconst wichSong = async (artist) => {\r\n\r\n    const selectedAlbum = await getRandomAlbums(artist)\r\n    const artistName = selectedAlbum.artist.name\r\n\r\n    const albums = selectedAlbum.mbid \r\n        ? await getInfoAlbum(selectedAlbum.mbid)\r\n        : await getInfoAlbumByName(selectedAlbum.name, selectedAlbum.artist.name)\r\n\r\n\r\n    // Check if there is any track, if not send to who recorded question\r\n    if(albums?.album?.tracks?.track?.length > 0) {\r\n        const {album : {tracks}} = albums\r\n\r\n        const songs = getRandomElements(tracks.track, 3).map((song)=>{\r\n            return song.name\r\n        })\r\n\r\n        const {similarartists : { artist : simArtist }} = await getSimilarArtist(artistName)\r\n    \r\n        const randomArtist = getRandomElements(simArtist, 1)[0]\r\n    \r\n        const randomAlbum = await getRandomAlbums(randomArtist)\r\n        \r\n        const randomA = randomAlbum.mbid \r\n            ? await getInfoAlbum(randomAlbum.mbid)\r\n            : await getInfoAlbumByName(randomAlbum.name, randomAlbum.artist.name)\r\n    \r\n        if(randomA?.album?.tracks?.track?.length > 0) {\r\n\r\n            const {album : am} = randomA\r\n\r\n            const randomSong = getRandomElements(am.tracks.track, 1)[0].name\r\n    \r\n            const titleQuestion = `Which of these songs wasn't recorded by ${artistName}?`;\r\n            const answers = [...getRandomElements(songs, 3), randomSong].sort(() => Math.random() - 0.5);\r\n            const correctAnswer = Object.keys(answers).find(key => answers[key] === randomSong)\r\n            \r\n            const quiz = {\r\n                title: titleQuestion,\r\n                answers: answers,\r\n                correctAnswer: correctAnswer\r\n            }\r\n        \r\n            return quiz\r\n\r\n        } else {\r\n\r\n            return whoRecorded(artist)\r\n\r\n        }\r\n\r\n    } else {\r\n        return whoRecorded(artist)\r\n    }\r\n\r\n\r\n}\r\n\r\nconst wichAlbum = async (artist) => {\r\n\r\n    const selectedAlbums = await getRandomAlbums(artist, 3)\r\n    \r\n    if(selectedAlbums[0]?.artist?.name) {\r\n\r\n        const artistName = selectedAlbums[0].artist.name\r\n        const albums = selectedAlbums.map(album=>album.name)\r\n    \r\n        const {similarartists : { artist :simArtist }} = await getSimilarArtist(artistName)\r\n        const randomArtist = getRandomElements(simArtist, 1)[0]\r\n\r\n        const randomAlb = await getRandomAlbums(randomArtist)\r\n        if(randomAlb) {\r\n            const { name : randomAlbum } = randomAlb\r\n        \r\n            const titleQuestion = `Which of these albums wasn't recorded by ${artistName}?`;\r\n            const answers = [...albums, randomAlbum].sort(() => Math.random() - 0.5);\r\n            const correctAnswer = Object.keys(answers).find(key => answers[key] === randomAlbum)\r\n            \r\n            const quiz = {\r\n                title: titleQuestion,\r\n                answers: answers,\r\n                correctAnswer: correctAnswer\r\n            }\r\n        \r\n            return quiz\r\n\r\n        } else {\r\n\r\n            return whoRecorded(artist)\r\n\r\n        }\r\n\r\n\r\n    } else  {\r\n\r\n        return whoRecorded(artist)\r\n\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst getReleaseYear = (wiki) => {\r\n\r\n    let releaseYear = '';\r\n        const yearRegex = /(\\d\\d\\d\\d)/;\r\n        const matches = wiki.content.match('released');\r\n        const splitMatches = matches ? wiki.content.split('released') : null;\r\n\r\n        (splitMatches && splitMatches[1] && splitMatches[1].match(yearRegex)) && (releaseYear = splitMatches[1].match(yearRegex)[0])\r\n        \r\n    return releaseYear;\r\n\r\n}\r\nconst getRandomAlbums = async (artist, n=1) => {\r\n\r\n\r\n    if(artist?.name) {\r\n\r\n        const { mbid, name } = artist\r\n\r\n        const albums = mbid \r\n                ? await getTopAlbums(mbid) \r\n                : await getTopAlbumsByName(name)\r\n\r\n        if(albums?.topalbums?.album?.length > 0) {\r\n\r\n            const { topalbums : { album } } = albums \r\n\r\n            const formAlbum = album.filter(({name}) => \r\n            !name.includes('Essential') &&\r\n            !name.includes('Best') &&\r\n            !name.includes('Anniversary') &&\r\n            !name.includes('Collection') &&\r\n            !name.includes('Hits') &&\r\n            !name.includes('Greatest') &&\r\n            !name.includes('Deluxe') &&\r\n            !name.includes('null') &&         \r\n            !name.includes('Number Ones')  &&           \r\n            !name.includes('Anthology')  &&           \r\n            !name.includes('Singles')  &&           \r\n            !name.includes('History')  &&           \r\n            !name.includes('Remaster')  &&           \r\n            !name.includes('Mix')         \r\n            )\r\n\r\n            return n === 1 ? getRandomElements(formAlbum, 1)[0] : getRandomElements(formAlbum, n)\r\n\r\n        } else {\r\n            \r\n            return whoRecorded(artist)\r\n\r\n        }\r\n\r\n\r\n    }     \r\n\r\n}","import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(null);","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { QuizSelector } from '../utils/QuizConstructor';\r\nimport { UserContext } from '../utils/UserContext';\r\n\r\nexport const Intro = () => {\r\n\r\n\r\n    const {favArtist, setFavArtist, setSelectedArtist} = useContext(UserContext);\r\n    const history = useHistory();\r\n    const [error, setError] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setFavArtist(e.target.value)\r\n        setError('')\r\n    }\r\n\r\n    let disabled = !favArtist ? true : false;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        QuizSelector(favArtist).then(artists=> {\r\n\r\n            if(artists.length > 0) {\r\n                const selectedArtist = artists.reduce((acc, ele) => (parseInt(acc.listeners) > parseInt(ele.listeners)) ? acc : ele );\r\n                setSelectedArtist(selectedArtist);\r\n                history.replace('/quiz')\r\n            } else {\r\n                setError(`We couldn't find any title with the name of ${favArtist}`)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"intro\">\r\n            <div className=\"description\">\r\n                <h1>Automatic quiz generator</h1>\r\n                <p>In order for us to generate the quiz you must enter the name of your favorite band/artist:</p>\r\n            </div>\r\n            <div className=\"form\">\r\n                <form>\r\n                    <div className=\"form__field\">\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form__field__input\" \r\n                            autoComplete=\"off\"\r\n                            placeholder=\"Your favorite film\" \r\n                            name=\"favFilm\" \r\n                            id=\"favFilm\" \r\n                            required \r\n                            value={ favArtist }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n                        <label \r\n                            htmlFor=\"favFilm\"\r\n                            className=\"form__field__label\"\r\n                            >\r\n                                Your favorite band/artist\r\n                        </label>\r\n                    </div>\r\n                    <button \r\n                        className=\"form__button\"\r\n                        disabled={disabled} \r\n                        onClick={ handleSubmit }\r\n                        >\r\n                            Send\r\n                    </button>  \r\n                </form>\r\n\r\n                { error &&\r\n                    (<div className=\"error-text\">\r\n                        { error }\r\n                    </div>)\r\n                }\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { getSimilarArtist } from \"../api/ApiSelector\"\r\nimport { getRandomElements } from \"./getRandomElement\";\r\n\r\nexport const GetNextQuestion = async(name) => {\r\n    const {similarartists : { artist }} = await getSimilarArtist(name);\r\n    return getRandomElements(artist, 1)[0];\r\n}","import React from 'react'\r\n\r\nconst styleWidth = (percent) => {\r\n    return {\r\n        width : percent + '%'\r\n    }\r\n}\r\n\r\nexport const Percentages = ({ correctAnswers, totalAnswers }) => {\r\n\r\n    let percentCorrect = totalAnswers < 100 ? correctAnswers : Math.round((correctAnswers * 100)/totalAnswers)\r\n    let percentWrong = totalAnswers < 100 ? (totalAnswers - correctAnswers) : 100 - percentCorrect\r\n\r\n\r\n    return (\r\n        <div className=\"statics\">\r\n            <h3>Correct answers : \r\n                <span className=\"statics__correct-answers\"> { correctAnswers }</span> \r\n                <span className=\"statics__total-answers\"> / { totalAnswers }</span>\r\n            </h3>   \r\n            <div className=\"percent\">\r\n                <div \r\n                    style={ \r\n                        styleWidth(percentCorrect) \r\n                    } \r\n                    className=\"percent__correct\"\r\n                ></div>\r\n                <div \r\n                    style={ \r\n                        styleWidth(percentWrong) \r\n                    } \r\n                    className=\"percent__wrong\"\r\n                ></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GetNextQuestion } from '../utils/GetNextQuestion';\r\nimport { quizConstructor } from '../utils/QuizConstructor'\r\nimport { UserContext } from '../utils/UserContext';\r\nimport { Percentages } from './ui/Percentages';\r\n\r\nexport const Quiz = () => {\r\n\r\n    \r\n    const [correctAnswers, setCorrectAnswers] = useState(0)\r\n    const [totalAnswers, setTotalAnswers] = useState(0)\r\n    const { selectedArtist } = useContext(UserContext);\r\n \r\n    const radioRef = useRef([])\r\n\r\n    const history = useHistory();\r\n    (!selectedArtist && history.replace('./intro'))\r\n\r\n    const [quiz, setQuiz] = useState({\r\n        title : '',\r\n        answers: [],\r\n        correctAnswer: '',\r\n        loading : true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        selectedArtist && (quizConstructor(selectedArtist).then(q=>{\r\n            setQuiz(q)\r\n        })\r\n        )\r\n        //selectedArtist && (setQuiz(quizConstructor(selectedArtist)))\r\n\r\n    }, [selectedArtist]);\r\n\r\n    const handleChange = (e) => {\r\n\r\n        setTotalAnswers( totalAnswers + 1 )\r\n\r\n        if(quiz.correctAnswer === e.target.value) {\r\n            setCorrectAnswers( correctAnswers + 1 )\r\n            radioRef.current[e.target.value].classList.add(\"correct-answer\");\r\n        } else {\r\n            radioRef.current[quiz.correctAnswer].classList.add(\"correct-answer\");\r\n            radioRef.current[e.target.value].classList.add(\"wrong-answer\");\r\n        }\r\n\r\n        setTimeout(()=>{\r\n    \r\n            setQuiz({\r\n                title : '',\r\n                answers: [],\r\n                correctAnswer: '',\r\n                loading: true\r\n            })\r\n    \r\n            GetNextQuestion(selectedArtist.name).then(artist=>{\r\n                quizConstructor(artist).then(a=>{\r\n                    setQuiz(a)\r\n                })\r\n            })\r\n\r\n\r\n        }, 1500);\r\n    }\r\n\r\n    return (\r\n        <div className=\"quiz\">\r\n            <div className=\"question\">\r\n\r\n                <div className=\"fav-movie\">\r\n                    <h2>You chose {selectedArtist.name}</h2>\r\n                </div>\r\n\r\n                <Percentages \r\n                    correctAnswers={ correctAnswers }\r\n                    totalAnswers={ totalAnswers }\r\n                />\r\n                    <div className=\"question__title\">\r\n                        <h1>{ quiz.title }</h1>\r\n                    </div><div className=\"question__answers\">\r\n                        {\r\n                            Object.keys(quiz.answers).map(id=>\r\n                                <label \r\n                                    ref={el => radioRef.current[id] = el} \r\n                                    className=\"radio radio-gradient\" \r\n                                    key={quiz.answers[id]}\r\n                                >\r\n                                    <span className=\"radio__input\">\r\n                                        <input\r\n                                            name='answer'\r\n                                            type=\"radio\"\r\n                                            value={id}\r\n                                            onChange={ handleChange }\r\n                                        /> \r\n                                    <span className=\"radio__control\"></span>\r\n                                    </span>\r\n                                    <span className=\"radio__label\">{quiz.answers[id]}</span>\r\n                                </label>\r\n                            )\r\n                        }\r\n                    </div>\r\n                \r\n                \r\n\r\n                {(quiz.loading) && \r\n                <div>\r\n                    Loading...\r\n                </div>\r\n                }    \r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const Header = () => {\r\n    \r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to=\"./\"><h2>musigame.</h2></Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { \r\n    BrowserRouter as Router, \r\n    Redirect, \r\n    Route, \r\n    Switch \r\n} from 'react-router-dom'\r\n\r\nimport { Intro } from '../components/Intro'\r\nimport { Quiz } from '../components/Quiz'\r\nimport { Header } from '../components/ui/Header'\r\n\r\n\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n\r\n            <div className=\"app-container\">\r\n\r\n                <Header />\r\n\r\n                <div className=\"main-container\">\r\n                    <Switch>\r\n                        <Route exact path=\"/intro\" component={ Intro } />\r\n                        <Route exact path=\"/quiz\" component={ Quiz } />\r\n                        \r\n                        <Redirect to=\"/intro\" />\r\n\r\n                    </Switch>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </Router>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { UserContext } from './utils/UserContext'\r\n\r\nexport const QuizApp = () => {\r\n\r\n    const [favArtist, setFavArtist] = useState('')\r\n    const [selectedArtist, setSelectedArtist] = useState('')\r\n\r\n    return (\r\n        <UserContext.Provider value={{\r\n            favArtist,\r\n            setFavArtist,\r\n            selectedArtist,\r\n            setSelectedArtist\r\n        }}>\r\n            <AppRouter />\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QuizApp } from './QuizApp';\n\nimport './styles/styles.scss'\n\nReactDOM.render(\n    <QuizApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}